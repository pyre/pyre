// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2023 all rights reserved

// code guard
#if !defined(pyre_journal_Null_icc)
#error This header contains implementation details of pyre::journal::Null
#else


// metamethods
pyre::journal::Null::Null(const name_type &) {}


// accessors
constexpr auto
pyre::journal::Null::active() const
{
    // easy enough
    return false;
}


constexpr auto
pyre::journal::Null::fatal() const
{
    // easy enough
    return false;
}


constexpr auto
pyre::journal::Null::device() const -> device_type
{
    // easy enough
    return nullptr;
}


// accessors
constexpr auto pyre::journal::Null::active(active_type) -> Null &
{
    // all done
    return *this;
}


constexpr auto pyre::journal::Null::fatal(fatal_type) -> Null &
{
    // all done
    return *this;
}


constexpr auto pyre::journal::Null::device(device_type) -> Null &
{
    // all done
    return *this;
}


constexpr pyre::journal::Null::operator active_type() const
{
    // always off
    return false;
}


// interface
constexpr void
pyre::journal::Null::activate() const
{
    // nothing to do
    return;
}


constexpr void
pyre::journal::Null::deactivate() const
{
    // nothing to do
    return;
}


constexpr void
pyre::journal::Null::activateChannels(const nameset_type &)
{
    // nothing to do
    return;
}


// manipulators
constexpr auto
pyre::journal::endl(const Null & null) -> const Null &
{
    // leave the channel alone
    return null;
}


constexpr auto
pyre::journal::newline(const Null & null) -> const Null &
{
    // leave the channel alone
    return null;
}


// the injection operators
// color
constexpr auto
pyre::journal::operator<<(const Null & null, const Color &) -> const Null &
{
    // do nothing
    return null;
}


// detail level
constexpr auto
pyre::journal::operator<<(const Null & null, const Dent &) -> const Null &
{
    // do nothing
    return null;
}


// detail level
constexpr auto
pyre::journal::operator<<(const Null & null, const Detail &) -> const Null &
{
    // do nothing
    return null;
}


// location info
constexpr auto
pyre::journal::operator<<(const Null & null, const Locator &) -> const Null &
{
    // do nothing
    return null;
}


// metadata
constexpr auto
pyre::journal::operator<<(const Null & null, const Note &) -> const Null &
{
    // do nothing
    return null;
}


// injection of manipulator functions
constexpr auto
pyre::journal::operator<<(const Null & null, const Null & (*) (const Null &) ) -> const Null &
{
    // do nothing
    return null;
}


// injection of everything else
template <typename itemT>
constexpr auto
pyre::journal::operator<<(const Null & null, const itemT &) -> const Null &
{
    // leave the channel alone
    return null;
}


#endif

// end of file
