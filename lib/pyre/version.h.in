// -*- C++ -*-
// -*- coding: utf-8 -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2023 all rights reserved

// code guard
#if !defined(pyre_version_h)
#define pyre_version_h


// support
#include <tuple>
#include <string>


// put all version related symbols in their own namespace
// N.B.: version information is made available two different ways in order to enable detecting
// inconsistencies between the headers accessible at compile time and the library available
// at run time
namespace pyre::version {
    // type aliases
    using string_t = std::string;
    // my version is a tuple of three integers and the {git} hash
    using version_t = std::tuple<int, int, int, string_t>;

    // the version visible through the headers
    // clang-format off
    const int major = @MAJOR@;
    const int minor = @MINOR@;
    const int micro = @MICRO@;
    const string_t revision = "@REVISION@";
    // clang-format on

    // the version of the {pyre} library headers
    inline auto headerVersion() -> version_t
    {
        // build and return the version tuple that corresponds to these headers
        return version_t { major, minor, micro, revision };
    }

    // build and return the version tuple as it was seen at the time {libpyre} was compiled
    auto version() -> version_t;

} // namespace pyre::version


#endif

// end of file
