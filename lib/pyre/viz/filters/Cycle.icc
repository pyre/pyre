// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2022 all rights reserved

// code guard
#if !defined(pyre_viz_filters_Cycle_icc)
#error this file contains implementation details for pyre::viz::filters::Cycle
#else


// metamethods
// constructor
template <class sourceT>
pyre::viz::filters::Cycle<sourceT>::Cycle(source_const_reference source) : _source(source)
{}


// interface
template <class sourceT>
auto
pyre::viz::filters::Cycle<sourceT>::operator*() const -> value_type
{
    // compute the phase and map it to [-0.5, 0.5]
    auto cycle = std::arg(*_source) / (2 * M_PI);
    // fold the negative range
    if (cycle < 0) {
        // by shifting it over
        cycle += 1;
    }
    // and done
    return cycle;
}


template <class sourceT>
auto
pyre::viz::filters::Cycle<sourceT>::operator++() -> void
{
    // increment my source
    ++_source;
    // all done
    return;
}


#endif

// end of file
