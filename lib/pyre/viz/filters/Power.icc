// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2023 all rights reserved

// code guard
#if !defined(pyre_viz_filters_Power_icc)
#error this file contains implementation details for pyre::viz::Power
#else


// metamethods
// constructor
template <class sourceT>
pyre::viz::filters::Power<sourceT>::Power(
    source_const_reference source, double mean, double scale, double exponent) :
    // the source
    _source(source),
    // the parameters
    _mean(mean),
    _scale(scale),
    _exponent(exponent)
{}


// interface
template <class sourceT>
auto
pyre::viz::filters::Power<sourceT>::operator*() const -> value_type
{
    // get the signal value
    auto z = *_source;
    // filter
    auto value = _scale * std::pow(z / _mean, _exponent);
    // and return it
    return value;
}


template <class sourceT>
auto
pyre::viz::filters::Power<sourceT>::operator++() -> void
{
    // increment my source
    ++_source;
    // all done
    return;
}


#endif

// end of file
