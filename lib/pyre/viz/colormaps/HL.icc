// -*- c++ -*-
//
// michael a.g. aïvázis <michael.aivazis@para-sim.com>
// (c) 1998-2023 all rights reserved

// code guard
#if !defined(pyre_viz_colormaps_HL_icc)
#error this file contains implementation details for pyre::viz::colormaps::HL
#else

// metamethods
template <class hueSourceT, class luminositySourceT>
pyre::viz::colormaps::HL<hueSourceT, luminositySourceT>::HL(
    // the sources
    hue_source_const_reference hue, luminosity_source_const_reference luminosity,
    // the free parameters
    double threshold) :
    _hue { hue },
    _luminosity { luminosity },
    _threshold { threshold }
{}


// interface
template <class hueSourceT, class luminositySourceT>
auto
pyre::viz::colormaps::HL<hueSourceT, luminositySourceT>::operator*() const -> rgb_type
{
    // get values from my data sources
    auto hue = *_hue;
    auto luminosity = *_luminosity;

    // covert to {rgb} and return
    return colorspaces::hl(hue, luminosity, _threshold);
}


template <class hueSourceT, class luminositySourceT>
auto
pyre::viz::colormaps::HL<hueSourceT, luminositySourceT>::operator++() -> void
{
    // make my sources point to the next value
    ++_hue;
    ++_luminosity;
    // all done
    return;
}


#endif

// end of file
